/**
   
 */

import "BaseType.proto";
package msg;

//属性值算法 = 基础值 + 附加值 + 基础值*附加百分比 
message TProperty
{
	 uint32 base = 1; //基础值
	 uint32 add  = 2; //附加值
	 uint32 per  = 3; //附加百分比	
}


//单个孔的基本信息
message HoleBaseInfo
{
	 uint32 isopenflag = 1; //0 孔未开 1 孔开
	 uint32 gemtypeid = 2;//镶嵌宝石的编号 0 未镶嵌宝石
	 uint32 gemlevel = 3; //已经镶嵌宝石的等级
}

//道具基本信息
message ItemBaseInfo
{
	 string uid       	= 1; //道具UID
	 uint32 type_id 	= 2; //道具的类型id
	 uint32 num			= 3; //道具数量
	 uint32 bind 		= 4; //是否已经被绑定 0不绑定 1绑定
	 uint32 bag_type 	= 5; //1.普通包裹 2.随身包裹 3.装备包裹
	 uint32 info_type  	= 6; //1,修改，2新增 3.删除
	 uint32 quality     = 7; //品质 1,普通,2优秀,3精良,4稀有,5史诗
	 uint32 begin_time  = 8; //开始时间 对应下面的state状态
	 uint32 state       = 9; //0,正常状态 1,打造中 2,升级中 3,修理中
	 uint32 index       = 10; //装备位置
	 uint32 durability  = 11; //耐久度百分比

	 TProperty	str			= 12;	//力量
	 TProperty	inte		= 13;	//智力
	 TProperty	dex			= 14;	//敏捷
	 TProperty	spi			= 15;	//精神
	 TProperty	con			= 16;	//体质
	 TProperty  pattmin     = 17;   // 最少物理攻击
	 TProperty  pattmax     = 18;   // 最大物理攻击
	 TProperty  mattmin     = 19;   // 最少魔法攻击
	 TProperty  mattmax     = 20;   // 最大魔法攻击
	 TProperty	hp			= 21;	//血
	 TProperty  pdefence    = 22;   // 物理防御
	 TProperty  mdefence    = 23;   // 魔法防御
	 uint32     upgrade	    = 24;   //星星数
	 uint32     score		= 25;	//评分
//灵魂锁链
	 uint32     firsoul_type		= 26;	//灵魂锁链种类 1-6
	 uint32     firsoul_value		= 27;//随机到的值
	 uint32 	secsoul_level		= 28;
	 uint32		secsoul_exp			= 29;

	repeated HoleBaseInfo holebaseinfo          = 30;//孔的基本信息
	
	 uint32 	inten_1lv	= 31;			//阶数
	 uint32		inten_2lv	= 32;			//等级
}


//请求包裹道具列表
message MSG_ReqItemListCmd_CS
{
	 uint32 item_bag_type = 1;// 1.普通包裹 2.随身包裹 3.装备包裹
}
//返回包裹道具列表
message MSG_RetItemListCmd_SC
{
    repeated ItemBaseInfo items = 1;
}

//服务返回道具变化消息, 对操作的变化
message MSG_RetItemChangeCmd_SC
{
    repeated ItemBaseInfo items = 1;
     uint32 eway = 2; 		//变化途径 0默认同步路径 1 道具添加 2任务获得 3个人购买获得 4特殊打造获得 5熔炼出第一灵魂 6熔炼出普通装备
}


//请求所有包裹道具列表
message MSG_ReqAllItemListCmd_CS
{
}
//返回所有包裹道具列表
message MSG_RetAllItemListCmd_SC
{
    repeated ItemBaseInfo items = 1;
}


//请求将随身包裹的道具放入到仓库中
message MSG_PutBagItemsToWarehouse_CS
{

}
//返回
message MSG_PutBagItemsToWarehouse_SC
{
	 uint32 result 				= 1; //0成功 1失败
	repeated GameConsume houseConsume 	= 2; //仓库最新资源
}

///////////////////////////////////装备///////////////////////////////////////
//装备操作相关
message MSG_EquipOperateBegin_CS
{
     uint32  type           = 1; //1,打造 2,升级 3,修理 
     string  uid            = 2; //1,打造type_id 2,3道具唯一id
}
//返回装备操作相关结果
message MSG_EquipOperateBegin_SC
{
     uint32  result      = 1; //0,成功 1,开始打造失败 2,开始升级失败 3,开始修理失败
     string  uid         = 2; //唯一id
}


//装备操作相关
message MSG_EquipOperateEnd_CS
{
     uint32  type        = 1; //1,打造完成 2,升级完成 3,修理完成
     string  uid         = 2; //唯一id
}
message MSG_EquipOperateEnd_SC
{
     uint32  result      = 1; //0,成功 1,打造失败 2,升级失败 3,修理失败
     string  uid         = 2; //1,唯一id
}


//请求一键完成
message MSG_EquipImmediatelyFinish_CS
{
     string  uid         = 1; //道具唯一id
     uint32  state       = 2; //装备状态  1,打造中 2,升级中 3,修理中
}
//返回一键完成
message MSG_EquipImmediatelyFinish_SC
{
     uint32 result       = 1;//0,成功 1,失败 
     string  uid         = 2; //1,唯一id
}


//装备取消
message MSG_EquipCancel_CS
{
     uint32 type         = 1; //1,打造 2,升级 3,修理 等
     string uid          = 2; //唯一id
}
//返回装备取消结果
message MSG_EquipCancel_SC
{
     uint32   result    = 1; //0,成功 1失败
     string   uid       = 2; //唯一id
}

//请求已装备的装备列表
message MSG_ReqEquiped_CS
{
}
//返回已装备的装备
message MSG_ReturnEquiped_SC
{
   repeated string uids = 1; //道具唯一id
}


//请求更换职业,服务器需同步MSG_ReturnEquiped_SC
message MSG_ChangeProfression_CS
{
     uint32   prefression = 1;//enum ProfessionType
}

//发送装备属性变化提示客户端
message MSG_ChangeEquipAttribute_SC
{
	repeated string uids	= 1; //可变属性发生改变的装备唯一id
}
///////////////////////////////////旧的商店消息，现在不在用这个来了///////////////////////////////////////
// 购买物品 将要废弃
message MSG_ShopBuyItem_CS
{
	 uint32 shopitemid   = 1; // 购买物品配置表中物品索引
	 uint32 buynum       = 2; // 购买数量
}

//将要废弃
message MSG_ShopBuyItem_SC
{
	 uint32 shopitemid   = 1; // 购买物品
	 uint32 buynum       = 2; // 购买数量
	 uint32 result       = 3; // 0,成功 1失败
}
// 购买资源 将要废弃
message MSG_ShopBuyResource_CS
{
	 uint32 count   	 = 1; // 资源数量
	 uint32 type         = 2; // 资源类型 1：粮食， 2：银币
}


//将要废弃
message MSG_ShopBuyResource_SC
{
	 uint32 result       = 1; // 0,成功 1失败
}
///////////////////////////////////商店///////////////////////////////////////

///////////////////////////////////拾取///////////////////////////////////////
message MSG_ReqPickUpItemEntity_CS
{
	 uint32 entityid	=1; //物品ID
}
message MSG_RetPickUpItemEntity_SC
{
	 uint32 entityid	=1; //物品ID
	 uint32 result		=2; //拾取结果
}

message MSG_WearEquipOrPutDown_CS
{
	 uint32 op	= 1;		// 操作类型， 1-装备 2-卸下
	 string entityid = 2;	// 道具id
	 uint32	equippos = 3;	// 装备格子
}

message MSG_HeroWearEquipOrPutDown_CS
{
	 uint32 op	= 1;		// 操作类型， 1-装备 2-卸下
	 string heroid = 2;     // 英雄ID
	 string entityid = 3;	// 道具id
	 uint32	equippos = 4;	// 装备格子
}


//请求打造
message MSG_ReqEquipBuild_CS
{
	 uint32  type_id       = 1; //道具id
	 uint32  type       = 2;  //类型 1 普通打造 2 灵魂打造 3特殊打造 4 护卫打造 
}
//返回打造‘熔炼的结果
message MSG_RetEquipBuild_SC
{
	 uint32  result       = 1;//0 成功  1 失败 2 背包已满 
	 uint32  buildvalue       = 2 ;//打造值
	 uint32  repuvalue       = 3 ;//威望值
	 uint32  functype		= 4;	//功能类型	//0:打造 1:熔炼
}

message MSG_EquipRonglian_CS
{
	repeated string equipid = 1;	//熔炼的装备UID
}


message MSG_EquipAddStar_CS
{
	 string  uid       = 1; 
}
//装备升星
message MSG_EquipAddStar_SC
{
	 uint32  result       = 1; // 0 成功  1 升星失败
}


//请求摘星

message MSG_ReqPickStar_CS
{
	 string  uid       = 1; 
}

message MSG_RetPickStar_SC
{
	 uint32  result       = 2; // 0 成功  1 失败
}
//装备附星
message MSG_ReqInplayStar_CS
{
	 string  uid       = 1; 
	 string  stoneid   = 2;
}

message MSG_RetInplayStar_SC
{
	 uint32 result      = 1; // 0镶嵌成功  1 镶嵌失败
}

message MSG_ReqDockHole_CS
{
	 string  uid      = 1; //道具的uid
	 uint32 index     = 2 ; //道具的具体位置
}

message MSG_RetDockHole_SC
{
	 uint32  result      = 1; //0 success 1 fail
}


//魂魄石合成
//请求合成
message MSG_ReqSoulStoneUp_CS
{
	 string  mainstoneid    = 1;  //主魂魄石
	repeated string  stoneid        = 2;  //副魂魄石
}

//合成结果返回
message MSG_RetSoulStoneUp_SC
{
	 uint32 result          = 1; // 0 成功  1 失败   2 条件没满足，未进行合成操作
}

//////////////////////////////////////////////个人商城begin////////////////////////////////////////////

//个人商城商品信息结构体
message personal_shop_good
{
	 uint32 itemid  = 1;    //道具类id
	 uint32 quality = 2;    //品质
	 uint32 count   = 3;    //商品数量
	 uint32 discount = 4;   //折扣
	 uint32 type    = 5;    //商店类型
	 uint32 index   = 6;    //商品位置
	 uint32 bsold 	= 7; 	//标记是否卖没了，0:还有货物，1:卖没了
	 string price 	= 8; 	//价格(包含货币类型，与花费数量)
}

//个人商城刷新次数信息
message personal_shop_refreshcount
{
	 uint32 type = 1;       //商店类型
	 uint32 count = 2;      //刷新次数
}

//发送个人商城信心，商品数据若干，按类刷新与全部刷新都用这个
message MSG_SendPersonalShopInfo_SC
{
	repeated personal_shop_good goods_info = 1; //商品信息
	repeated personal_shop_refreshcount refresh_count = 2;    //刷新次数信息 
}

//客户端购买道具申请
message MSG_ReqBuyItemFromPersonalShop_CS
{
	 uint32 type = 1; 	//商店编号
	 uint32 index = 2; 	//商品编号
}

//购买道具返回结果
message MSG_RetBuyItemFromPersonalShop_SC
{
	 uint32 type = 1;       //商店编号
	 uint32 index = 2;      //商品编号
	 uint32 bsold = 3;  	//商品的出售状态，0:还有货，1:卖光了
}

//客户端请求刷新个人商城
message MSG_ReqFreshPersonalShop_CS
{
	 uint32 type = 1; 	//商店编号
}

//客户端请求购买某种类型个人商城的所有物品
message MSG_ReqBuyAll_CS
{
	 uint32 type = 1;       //商店编号
}

//个人商店购买货币信息结构体
message personal_shop_money
{
	 uint32 buytype  	= 1; 	//购买货币类型
	 uint32 round 		= 2; 	//购买货币轮数
}

//同步所有的个人商城货币购买信息
message MSG_SyncPersonalShopMoney_SC
{
	repeated personal_shop_money infos = 1; //货币购买信息
}

//客户端请求购买某种货币
message MSG_ReqBuyPersonalShopMoney_CS
{
	 uint32 type = 1; 	//购买类型
}

//返回购买货币结果
message MSG_RetBuyPersonalShopMoney_SC
{
	 uint32 ret = 1; 			//结果
	 personal_shop_money info  = 2; 	//如果购买成功，更新所购类型的轮数
	 uint32 multi = 3; 			//暴击倍数	
}

///////////////////////////////////////////////个人商城end/////////////////////////////////////////////

message MSG_ReqHoleInlay_CS
{
	 string  equipuid            = 1; //装备uid
	 string  stoneuid            = 2; //魂魄石uid
	 uint32  index            = 3; //孔的位置
}

message MSG_RetHoleInlay_SC
{
	 uint32 result = 1;        //0成功 1失败
}
//请求卸下魂魄石
message MSG_ReqUnloadStone_CS
{
	  string equipuid = 1;        //装备uid
	  uint32  index            = 2; //孔的位置
}

message MSG_RetUnloadStone_SC
{
	 uint32 result = 1;        //0成功 1失败
}


//请求一键卸下魂魄石
message MSG_ReqOneKeyUnloadStone_CS
{
	  string equipuid = 1;        //装备uid
}


message MSG_RetOneKeyUnloadStone_SC
{
	 uint32 result = 1;        //0成功 1失败
}

//请求升级第二灵魂等级
message MSG_ReqLevelUpSecSoulLevel_CS
{
	 string desequipid = 1;	//需要升级的装备
	repeated string srcequipid = 2; 	//消耗的装备
}

//返回第二灵魂等级结果
message MSG_RetLevelUpSecSoulLevel_SC
{
	 uint32 result = 1;        //0成功 1失败	
}

// 装备强化
message MSG_IntensifyEquipment_CS
{
	 string  equip_id            = 1; // 装备uid
	 string  hero_id			 = 2; // 英雄ID，如果有
}

// 返回装备强化结果
message MSG_RetIntensifyEquipmentResult_SC
{
	 uint32 result = 1;        //1成功 0失败	
}
