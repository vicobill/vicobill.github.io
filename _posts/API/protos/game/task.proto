package msg;

//玩家任务
message UserTask
{
	 uint32 taskid		= 1; //任务id
	 uint32 type		= 2; //任务类型 1.主线任务 2.日常任务 3.一次性任务,不需要主动去做
	 uint32 state		= 3; //任务状态 1.未完成状态 2.已完成未领取
	 uint32 finish_nums	= 4; //完成次数,日常任务会对该字段赋值
}

//发送玩家当前正在进行的任务
message MSG_SendUserTask_SC
{
	 uint32   refresh	= 1; //任务全部替换刷新,0 不刷新 1 刷新
	repeated UserTask tasks  	= 2; //正在进行的任务
}

//请求领取任务奖励
message MSG_GetCurrentTaskAward_CS
{
	 uint32 taskid		= 1; //任务id
}
//返回
message MSG_GetCurrentTaskAward_SC
{
	 uint32 	result		= 1; //0成功 1失败 	
	repeated UserTask 	tasks 		= 2; //正在进行的任务
	 uint32 	remove_task_id  = 3; //如果领奖成功,告诉客户端删除该任务
}

//发送已连续完成的任务的个数
message MSG_SendFinishedTaskNum_SC
{
	 uint32 finished_task_num = 1; 
}

//掉落
message TaskItemDrop
{
	 uint32 itemid = 1;
	 uint32 num	   = 2; 
}
//客户端完成当前任务
message MSG_ReqFinishCurrentTask_CS
{
	 uint32 cur_task_id = 1; //当前任务id
	 uint32 sub_hp		= 2; //扣除的血量
	repeated TaskItemDrop items = 3; //掉落的道具
}
//返回
message MSG_RetFinishCurrentTask_SC
{
	 uint32 cur_task_id = 1; //当前任务id
	 uint32 result 		= 2; //0成功  1该任务不能由客户端判断完成 2不是当前任务
}

//同步当日特殊任务的完成次数
message MSG_SendSpecialTaskFinishData_SC
{
	 uint32 finish_personalkill    = 1; //个人杀怪完成次数
	 uint32 finish_personaloccupy  = 2; //个人占领完成次数
	 uint32 finish_personalloot    = 3; //个人劫掠完成次数

}

//特殊任务信息(包括:个人任务,家族任务，国家任务)
message Specialtask
{
	 uint32 kind 		= 1; 	// 任务大类(1:个人任务 2:家族任务 3:国家任务)
	 uint32 index           = 2;    // 任务标识索引(表示此任务在此大类任务列表中的id)
	 uint32 type 		= 3; 	// 具体类型(杀怪/占矿/掠夺...等)
	 uint32 target  	= 4; 	// 任务目标(杀某类怪，占领某种矿，掠夺某个玩家...等)
	 uint32 goal 		= 5; 	// 达成条件(需要的个数或者次数要求等)
	 uint32 step 		= 6; 	// 当前完成(已经获取的个数或者达成的次数)
	 uint32 state 	 	= 7; 	// 任务状态(1可接，2已接，3可领奖，4完成，5放弃)
	 uint32 award 		= 8; 	// 奖励的倍率
	 uint32 fresh 	 	= 9; 	// 刷新次数
	 string familyaward 	= 10;  	// 给家族的奖励
}


//服务器同步特殊任务列表
message MSG_SendUserSpecailTaskList_SC
{
	repeated Specialtask personaltasks 	= 1; 	// 个人任务列表
	repeated Specialtask familytasks 	= 2; 	// 家族任务列表
	repeated Specialtask countrytasks 	= 3; 	// 国家任务俩表
}

//客户端申请特殊任务刷新
message MSG_ReqFreshSpecialTask_CS 
{
	 uint32 kind 	= 1; 	// 某大类
	 uint32 type 	= 2; 	// 具体类型
	 uint32 index 	= 3; 	// 某个
}


//服务器刷新返回
message MSG_RetFreshSpecailTask_SC 
{
	 uint32 ret = 1; 	// 结果
	 Specialtask task = 2;  // 刷新出的任务
}


//客户端申请接去特殊任务
message MSG_ReqAcceptSpecialTask_CS
{
	 uint32 kind 	= 1; // 某大类
	 uint32 type 	= 2; // 具体类型
	 uint32 index 	= 3; // 任务编号
}

//服务器返回申请接取特殊任务
message MSG_RetAcceptSpecialTask_SC
{
	 uint32 kind    = 1; // 某大类
	 uint32 type    = 2; // 具体类型
	 uint32 index   = 3; // 任务编号
	 uint32 ret 	= 4; // 申请结果
}

//申请放弃
message MSG_ReqGiveUpSpecialTask_CS
{
	 uint32 kind    = 1; // 某大类
	 uint32 type    = 2; // 具体类型
         uint32 index   = 3; // 任务编号
}


//返回放弃
message MSG_RetGiveUpSpecialTask_SC
{
         uint32 ret     = 1; // 申请结果
	 Specialtask task = 2; //自动刷一个新的白品质任务
}


//返回某条任务发生变化
message MSG_RetSpecialTaskStepChange_SC
{
	 Specialtask task = 1; //目标变化的任务 
}

//零点刷新特殊任务刷新次数
message MSG_ZeroFreshCountClear_SC
{
	
}

//申请领奖励
message MSG_ReqGetSpecialTaskAward_CS
{
	
	 uint32 kind    = 1; // 某大类
	 uint32 type    = 2; // 具体类型
         uint32 index   = 3; // 任务编号

}

//申请领奖返回
message MSG_RetGetSpecialTaskAward_SC
{
	 uint32 ret     = 1; // 申请结果
	 Specialtask task = 2; //完成后自动刷一个新的白品质任务
}





