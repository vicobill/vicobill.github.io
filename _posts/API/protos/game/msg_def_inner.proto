syntax = "proto2";

package msg;

import "gogo/gogo.proto";

option (gogoproto.equal_all) = true;
option (gogoproto.verbose_equal_all) = true;
option (gogoproto.gostring_all) = true;

option (gogoproto.populate_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unsafe_marshaler_all) = false;
option (gogoproto.unsafe_unmarshaler_all) = false;


enum RPC_ServiceType{
    ServiceType_UserService = 1;
    ServiceType_SocialService = 2;
    ServiceType_SessionService = 3;
    ServiceType_MatchService = 4;
    ServiceType_RoomService = 5;
    ServiceType_ChatService = 6;
	ServiceType_MailService = 7;
	ServiceType_LoginService = 8;
	ServiceType_RoomTcpService = 9;
	ServiceType_InfoService = 10;
}

message RPC_LoginReq{
     uint64 service_id = 1;
     string service_addr = 2;
	 uint64 service_type = 3;
	 string tcp_addr = 4;		//TCP服务地址ip:port
}

message RPC_LoginReply{
    repeated RPC_LoginReq service_list = 1;
}

message RPC_ReturnCode{
     uint64 ret_code = 1;
}

message RPC_ReturnVoid{
}


//标示一个用户
message RPC_UserIdentify{
     uint64 user_id = 1;
     string user_account = 2;
     string user_name = 3;
	 uint64 user_gate_id = 4;
}

message RPC_SkinData{
    repeated uint64 skin_id = 1;
}

message RPC_HeroData{
	 uint64 hero_id = 1;
	 bool active = 2;
	 RPC_SkinData skin_ids = 3;
	 uint64 cur_skin_id = 4;
}

//这个已经退化成 MatchUserData了
//其他功能不要用
message RPC_UserData{
     uint64 user_id = 1;
     string user_name = 2;
    repeated RPC_HeroData heros = 3;
     RPC_BaseUserData base_data = 5;
	 uint32 game_count = 6;
	 RPC_GradeData grade = 7;
	 uint32 position = 8;
	 uint32 user_gate_id = 9;				//玩家所在网关
}

message RPC_GradeData{
	 uint64 medal = 2;	//勋章
	 uint64 brave = 3;	//勇气积分
	 uint64 grade = 4;	//段位
	 uint64 star = 5;	//星
     uint64 continue_win = 6;
}

message RPC_SocialNumData{
     uint64 my_follow_num = 1;		// 我关注的人
	 uint64 follow_me_num = 2;		// 关注我的人
	 uint64 friend_num = 3;			// 好友
	 uint64 recent_contact_num = 4; // 最近联系的人
}

message RPC_BaseUserData {
     uint64 user_id = 1;
	 string user_name = 2;
	 uint32 level = 3; 				// 等级
	 uint32 face = 4;				// 头像
	 uint32 gender = 5;				// 性别
	 string photo = 6;				// 照片
	 float  x = 7;					// 地理坐标x
	 float  y = 8;					// 地理坐标y
}

message RPC_RecentNews{
	 uint32 event = 1;		  // 最近动态事件 RecentNewsType
	 uint64 happen_time = 2;  // 时间发生时间
	 uint32 extra_param = 3;  // 其他参数
}

// 聊天的人物信息
message RPC_ChatUserData {
	 RPC_UserIdentify user = 1;
	 uint32 face = 2;		// 头像
	 string user_name = 3;	// 名字
	 RPC_GradeData grade = 4;	// 当前段位
	 RPC_BaseUserData base_data = 5; // 基础数据
}

// 聊天消息结构
message RPC_ChatMessageData {
	 string text = 1;		// 聊天文本
	 uint64 form_id = 2;	// 发送ID
	 uint64 to_id = 3;		// 接收ID
	 uint64 chat_time = 4;	// 聊天时间
}

message RPC_ItemData
{
	 uint64 object_id  = 1;		//道具ID
	 uint64 object_num = 2;		//道具数量
}

// 单个邮件
message RPC_UserMaiItemData
{
	 uint64 mail_id				= 1;		//邮件ID
	 uint32 mail_type			= 2;		//邮件类型
	 string title				= 3;		//邮件标题
	 string text    		    = 4;		//文字
	 bool read 		 			= 5;		//是否读过邮件
	 uint64 time				= 6;		//邮件产生时间
	 RPC_BaseUserData base_data	= 7;		//发送人基本信息
	repeated RPC_ItemData item 			= 8;		//邮件道具
}

message RPC_UserMaiItemDatas
{
	repeated RPC_UserMaiItemData datas = 1;
}

// RPC_BaseUserData 的扩充，可以作为一种通用的类型使用
message RPC_ExpandBaseUserData 
{
	 RPC_BaseUserData base_data = 1;		//基础数据
	 bool robot = 2;						//是否机器人
	 bool double_confirm_state = 3;			//二次确认状态
	 uint64 team_match_time = 4;			//队伍匹配成功时间
	 uint32 light_time = 5;					//机器人点亮时间，时间是秒，2表示team_match_time后2s点亮
	 RPC_SystemSetting setting = 6;			//系统设置
	 uint32 teamab = 7;						//玩家team信息
	 uint32 position = 8;					//玩家位置信息
	 RPC_GradeData grade = 9;			    //段位
	 uint32 user_gate_id = 10;				//玩家所在网关
	repeated RPC_HeroData heros = 11;					//英雄信息
}

// 社交玩家的其他需存储的数据
message RPC_ExtralSocialUserData
{
     bool new_follow_other = 1;             // 新的关注他人
	 uint64 contact_time = 2;				// 联系时间
 	 uint64 last_follow_me_num = 3;			// 新增社交界面关注数量
	 string nick_name = 4;
	 bool follow_him = 5;					// 是否关注他
}

// 社交玩家的基础数据
message RPC_SocialUserData {
	 RPC_BaseUserData base_data = 1;			//基础人物数据
     RPC_GradeData grade = 2;				
     RPC_GradeData history_grade = 3;
     RPC_RecentNews recent_news = 4;			// 人物最新动态
	 RPC_ExtralSocialUserData extral_data = 5;
	 RPC_SortListExtraData sort_extra_data = 6;
	repeated RPC_HeroData heros = 7;				    //英雄信息
}

// 排行榜其他数据信息
message RPC_SortListExtraData {
	 uint64 kill_num = 1;
	 uint64 daily_kill_num = 2;
	 uint64 weekly_kill_num = 3;
	 uint64 mvp_num = 4;
	 uint64 daily_mvp_num = 5;
	 uint64 weekly_mvp_num = 6;
	 uint64 daily_begin_time = 7;
	 uint64 weekly_begin_time = 8;
	 int64 daily_fans_num = 9;
	 int64 weekly_fans_num = 10;
	 uint64 fans_num = 11;
	 bool game_title = 12; //怦怦之神称号
}

// 用户状态
message RPC_UserState {
	 bool offline = 1;
	 bool online = 2;
	 bool team = 3;      
	 bool matching = 4;    
     bool select_hero = 5;   
	 bool gaming = 6;      
	 bool team_not_prepare = 7; // Team的子状态
}

// 系统设置的数据
message RPC_SystemSetting {
	 bool not_show_battle_data = 1;
	 bool no_friend_or_recent_invent = 2;
	 bool no_recent_invent = 3;
}

// 玩家Session状态
message RPC_SessionUserState {
	 bool offline = 1;						// 离线
	 bool online = 2;						// 在线
	 bool teaming = 3;						// 组队
	 bool matching = 4;						// 匹配
	 bool select_hero = 5;					// 选择英雄
	 bool gaming = 6;						// 游戏中
	 bool team_not_prepare = 7; 			// 组队中但是未准备好
	 bool view_game = 10;					// 观战

	 bool no_friend_or_recent_invent = 8;	// 不接收邀请
	 bool no_recent_invent = 9;				// 不接收最近邀请
}

// 成就数据
message RPC_TargetEventValue {
	 uint32 event_enum = 1;
	 uint64 old_value = 2;
	 uint64 new_value = 3;
}

// 社交上处理的玩家profile数据
message RPC_SocialProfileData {
	 uint32 be_praised_num = 1;	 // 被赞次数
	 int32 reputation = 2;		 // 信誉值
	 uint32 be_reported_num = 3; // 被举报次数
	 int32 reputation_score = 4;// 信誉积分
}